# Conditional G28
[gcode_macro CG28]
description: Only home if not already
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

# Quad Gantry Level
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: BASE_QUAD_GANTRY_LEVEL
gcode:
  BED_MESH_CLEAR		              ; clear bed mesh
  CG28				                    ; home all axes if not already
  M117 Gantry Leveling
  BASE_QUAD_GANTRY_LEVEL	        ; level gantry
  G28 Z				                    ; rehome z
  M117 V2.312 ~voron~

# Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT FOR YOUR SLICER OF CHOICE
[gcode_macro PRINT_START]
gcode:
  M117 Heating...
  M141 S55                        ; set chamber for 55C max
  M140 S{params.BED}              ; Set bed
  M109 S160                       ; Set and wait hotend (std qgl temp)
  M190 S{params.BED}              ; Set and wait bed
  M117 Homing...
  G28                             ; home all axes
  QUAD_GANTRY_LEVEL               ; home & level the gantry
  PARKBED                         ; Park bed
  M117 Heating...
  M109 S{params.EXTRUDER}         ; Set and wait hotend
  # BED_MESH_PROFILE LOAD=hot       ; load the bed mesh
  M117 Priming...
  PRIME_LINE                      ; prime line
  M117 V2.312 Printing...

# Use PRINT_END for the slicer ending script - PLEASE CUSTOMISE THE SCRIPT FOR YOUR SLICER OF CHOICE
[gcode_macro PRINT_END]
gcode:
  M400                            ; wait for buffer to clear
  G92 E0                          ; zero the extruder
  G1 E-10.0 F1800                 ; retract
  G91                             ; relative positioning

  G0 Z1.00 X20.0 Y20.0 F20000     ; move nozzle to remove stringing
  TURN_OFF_HEATERS                ; turn off heaters
  M107                            ; turn off print fan
  M141 S45                        ; vent chamber

  G1 Z5 F3000                     ; move nozzle up 5mm
  G90                             ; absolute positioning
  G0 X125 Y280 F4000              ; park nozzle at rear
  M117 V2.312 ~voron~
  BED_MESH_CLEAR                  ; clear bed mesh

# Get's a new bed mesh and overwrites the old one
[gcode_macro GET_BED_MESH]
gcode:
  BED_MESH_CLEAR                   ; Clear bed mesh data
  BED_MESH_PROFILE REMOVE=hot      ; Remove saved mesh
  QUAD_GANTRY_LEVEL                ; Auto Adjust
  BED_MESH_CALIBRATE               ; Run Bed Mesh
  BED_MESH_PROFILE SAVE=hot        ; Save Bed Mesh
  BED_MESH_PROFILE REMOVE=default  ; Remove default
  SAVE_CONFIG

#   Set chamber temp (OctoPrint)
[gcode_macro M141]
gcode:
  {% set fan_temp = params.S|default(0)|float %}
  SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber target={fan_temp}

# Prime the nozzle
[gcode_macro PRIME_LINE]
gcode: 
  SAVE_GCODE_STATE NAME=PRIME_LINE
  M117 Prime Line
  CG28                            ; home all axes if not already
  G90                             ; absolute coords
  M83                             ; extruder relative
  G1 Z5.0 F3000                   ; Move Z axis up
  G1 X2 Y10.0 F5000.0               ; Move to start position
  G1 Z0.20                        ; Move Z axis down
  G92 E0.0                        ; Reset Extruder

  G1 Y210.0 F1500.0 E20           ; Draw the first line
  G1 X3 F5000.0                   ; Move to side a little
  G1 Y10.0 F1500.0 E20            ; Draw the second line
  G10                             ; retract to avoid stringing

  G92 E0.0                        ; Reset Extruder
  G1 Z5.0 F3000                   ; Move Z Axis up
  RESTORE_GCODE_STATE NAME=PRIME_LINE

# Extrusion lengths must be adjusted for your particular configuration before use
[gcode_macro LOAD_FILAMENT]
gcode:
  {% if printer.idle_timeout.state != "Printing" %}
    CG28                           ; home all axes if not already
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    G90                            ; absolute coords
    M83                            ; set extruder to relative
    G1 Z100.0 F3000                ; Move Z axis to a suitable position
    G1 X150 Y50 F5000.0            ; Move to start position
    G1 E40 F1800                   ; quickly load filament down bowden
    G1 E50 F300                    ; slower extrusion for hotend path
    G1 E15 F150                    ; prime nozzle with filament
    G1 E-15 F150                   ; retract a little to prevent ooze
    M104 S160                      ; set temp back down to also help prevent ooze
    M82                            ; set extruder to absolute
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT
  {% else %}
    { action_respond_info("Filament loading disabled while printing!") }
  {% endif %}

# Extrusion lengths must be adjusted for your particular configuration before use
[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% if printer.idle_timeout.state != "Printing" %}
    CG28                           ; home all axes if not already
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT
    M83                            ; set extruder to relative
    G1 E3 F300                     ; extrude a little to soften tip
    G1 E-70 F1800                  ; retract filament completely
    M82                            ; set extruder to absolute
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT
  {% else %}
    { action_respond_info("Filament unloading disabled while printing!") }
  {% endif %}

# Heatsoaking
[gcode_macro HEATSOAK]
gcode:
  {% set BED = params.S|default(110)|int %}
  {% if printer.idle_timeout.state != "Printing" %}
    SAVE_GCODE_STATE NAME=HEATSOAK
    M141 S55                       ; set chamber for 55C max
    M140 S{BED}                    ; Set bed
    M104 S160                      ; Set hotend
    PARKBED                        ; Move to position
    RESTORE_GCODE_STATE NAME=HEATSOAK
  {% else %}
    { action_respond_info("PARKBED disabled while printing!") }
  {% endif %}

# Park bed for heatsoaking
[gcode_macro PARKBED]
gcode:
  CG28                           ; Home if not already homed
  SAVE_GCODE_STATE NAME=PARKBED
  G90                            ; absolute positioning
  G0 X150 Y150 Z5.0 F5000        ; Move to position
  RESTORE_GCODE_STATE NAME=PARKBED

# Park front for maintenance / cleaning
[gcode_macro PARKFRONT]
gcode:
  CG28                           ; Home if not already homed
  SAVE_GCODE_STATE NAME=PARKFRONT
  G90                            ; absolute coords
  G1 Z180 X150 Y10 F5000         ; Move to position
  RESTORE_GCODE_STATE NAME=PARKFRONT

# Filament change
[gcode_macro M600]
gcode:
  {% set x_val = params.X|default(50)|int %}
  {% set y_val = params.Y|default(10)|int %}
  {% set z_val = params.Z|default(10)|int %}
  {% set e_val = params.E|default(-10)|int %}
  G91
  G1 Z{z_val}
  G90
  G1 X{x_val} Y{y_val} F3000
  G0 E{e_val} F4800

#   Lighting Control
[gcode_macro SET_CASELIGHT]
gcode:
  {% set light_val = params.S|default(0)|float %}
  SET_PIN PIN=caselight VALUE={light_val}

[gcode_macro CASELIGHT_ON]
gcode:
  SET_CASELIGHT S=1.0

[gcode_macro CASELIGHT_OFF]
gcode:
  SET_CASELIGHT S=0.0

  #   Chamber Ventilation Control
[gcode_macro vent_on]
gcode:
    M141 S20

[gcode_macro vent_off]
gcode:
    M141 S70

[gcode_macro DUMP_PARAMETERS]
gcode:
    {% set parameters = namespace(output = '') %}

    {% for name1 in printer %}
        {% for name2 in printer[name1] %}
            {% set donotwant = ['bed_mesh','configfile'] %}
            {% if name1 is not in donotwant %}
                {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
                {% set parameters.output = parameters.output +  param + "\n" %}
            {% else %}
                {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
                {% set parameters.output = parameters.output +  param + "\n" %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    {action_respond_info(parameters.output)}
